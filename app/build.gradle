/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'pmd'
    id 'checkstyle'
    id 'maven-publish'
}

checkstyle {
    toolVersion '8.35'
    ignoreFailures = true
    maxWarnings = 0
    sourceSets = [project.sourceSets.main]
}
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/tnmyshukla/assignment-three")
            credentials {
                username = "tnmyshukla"
                password = "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"

            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.0-jre'
    implementation 'AssignmentThree:app:unspecified'
}

application {
    // Define the main class for the application.
    mainClass = 'com.assignment.App'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}
tasks.withType(Pmd){
    reports{
        xml.enabled=true
        html.enabled=true
    }
}
pmd {
    ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/pmd-rules.xml')
    pmdTest.enabled=false
    ignoreFailures = true
}
